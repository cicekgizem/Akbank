# -*- coding: utf-8 -*-
"""Akbank.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PvRVeZxBKwcq7GAbRPwYX8blgtzOtfnF

# Yeni Bölüm
"""

import pandas as pd

# 1. veri yükleme ve hazırlık
# users.csv dosyasını pandas kütüphanesi ile okuyalım
users = pd.read_csv(
    "users.csv",
    sep=None,             # ayırıcıyı otomatik bul
    engine='python',      # sep=None için python engine gerekli
    on_bad_lines='skip',  # bozuk satırları atla
    encoding='utf-8'
)

# transactions.csv dosyasını pandan kütüphanesi ile okuyalım
transactions = pd.read_csv(
    "transactions.csv",
    sep=None,
    engine='python',
    on_bad_lines='skip',
    encoding='utf-8'
)
# Sütun isimlerinden BOM karakterlerini temizleyelim
#users.columns = users.columns.str.replace('', '', regex=False)
users.columns = users.columns.str.strip()
transactions.columns = transactions.columns.str.strip()

# Datasetleri User ve ID üzerinden birleştirelim
data = transactions.merge(users, on="User", how="left")

# Veriye hızlı bir bakış için ilk 5 satırı görüntüleyelim
print(data.head())


# 2. en fazla harcama yapılan şehirler
# Grafik çizmek ve görselleştirme yapmak için matplotlib ve seaborn kütüphanelerini yükleyelim
import matplotlib.pyplot as plt
import seaborn as sns

# Merchant City kolonuna göre toplam harcama miktarını hesaplayalım
city_spending = data.groupby('Merchant City')['Amount'].sum().sort_values(ascending=False)

# En fazla harcama yapılan ilk 10 şehri sıralayalım
top10_cities = city_spending.head(10)

# Bar grafik ile görselleştirelim
plt.figure(figsize=(12,6))
sns.barplot(x=top10_cities.values, y=top10_cities.index, palette='viridis')
plt.title('En Fazla Harcama Yapılan İlk 10 Şehir', fontsize=16)
plt.xlabel('Toplam Harcama ($)')
plt.ylabel('Şehir')
plt.tight_layout()
plt.show()


# 3. saatlik harcama dağılımı
# Time sütunundan saat bilgisini alalım
data['Hour'] = data['Time'].str.split(':').str[0].astype(int)

# Saat bazında toplam harcamayı hesaplayalım
hourly_spending = data.groupby('Hour')['Amount'].sum()

# Çizgi grafik ile görselleştirelim
plt.figure(figsize=(12,6))
sns.lineplot(x=hourly_spending.index, y=hourly_spending.values, marker='o')
plt.title('Saatlik Harcama Dağılımı', fontsize=16)
plt.xlabel('Saat')
plt.ylabel('Toplam Harcama ($)')
plt.xticks(range(0,24))  # X ekseninde 0-23 saat aralığını gösterir.
plt.grid(True)
plt.tight_layout()
plt.show()


# 4.cinsiyete Göre Harcama
# Cinsiyete göre toplam harcama miktarını gruplandıralım
gender_spending = data.groupby('Gender')['Amount'].sum().sort_values(ascending=False)

# Bar grafik ile görselleştirelim
plt.figure(figsize=(8,5))
sns.barplot(x=gender_spending.index, y=gender_spending.values, palette='pastel')
plt.title('Cinsiyete Göre Toplam Harcama', fontsize=16)
plt.xlabel('Cinsiyet')
plt.ylabel('Toplam Harcama ($)')
plt.tight_layout()
plt.show()


# 5. gelire göre harcama
# Yıllık gelir kolonunu sayısala çevirelim
data['Yearly Income - Person'] = data['Yearly Income - Person'].replace(r'[\$,]', '', regex=True).astype(float)

# Scatter plot ile yıllık gelir ve harcama miktarı arasındaki ilişkiyi gösterelim
plt.figure(figsize=(10,6))
sns.scatterplot(x='Yearly Income - Person', y='Amount', data=data)
plt.title('Gelire Göre Harcama Dağılımı', fontsize=16)
plt.xlabel('Yıllık Gelir ($)')
plt.ylabel('Harcama Miktarı ($)')
plt.grid(True)
plt.tight_layout()
plt.show()


# 6. yorum
#En fazla harcamayı yapan şehir La Verne ve sırasıyla Monterey Park, Mira Loma, Online, Cancun, Ontario, Las Vegas, Marlton, Diamond Bar, San Antonio geliyor.
#Saatlik harcama dağılımı 06.00 da max seviyeye ulaşıyor. En yoğun olduğu diğer saatler ise 13.00 ve 20.00
#Cinsiyete göre toplam harcamanın kadınlarda daha çok olduğu görülüyor.
#Grafikte uç değerler ve harcama miktarı ile gelire göre harcama arasında ters ilişki olduğunu görüntülemekteyim.